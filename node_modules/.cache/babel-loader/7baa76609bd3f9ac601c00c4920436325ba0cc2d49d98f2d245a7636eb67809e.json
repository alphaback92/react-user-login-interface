{"ast":null,"code":"import React,{Fragment,useContext}from\"react\";import AuthContext from\"./components/store/auth-context\";import Login from\"./components/Login/Login\";import Home from\"./components/Home/Home\";import MainHeader from\"./components/MainHeader/MainHeader\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var ctx=useContext(AuthContext);//const [isLoggedIn, setIsLoggedIn] = useState(false);\n//useEffect(() => {\n// const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n// if (storedUserLogedInInformation === \"1\") {\n//   setIsLoggedIn(true);\n//  }\n//}, []);\n// const loginHandler = (email, password) => {\n// We should of course check email and password\n// But it's just a dummy/ demo anyways\n//    localStorage.setItem(\"isLoggedIn\", \"1\");\n//    setIsLoggedIn(true);\n//  };\n//const logoutHandler = () => {\n// localStorage.removeItem(\"isLoggedIn\");\n//setIsLoggedIn(false);\n//};\nreturn/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MainHeader,{}),/*#__PURE__*/_jsxs(\"main\",{children:[!ctx.isLoggedIn&&/*#__PURE__*/_jsx(Login,{}),ctx.isLoggedIn&&/*#__PURE__*/_jsx(Home,{})]})]});}export default App;","map":{"version":3,"names":["React","Fragment","useContext","AuthContext","Login","Home","MainHeader","jsx","_jsx","jsxs","_jsxs","App","ctx","children","isLoggedIn"],"sources":["/Users/alphaback/userlogin/src/App.js"],"sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const ctx = useContext(AuthContext);\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //useEffect(() => {\n  // const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n  // if (storedUserLogedInInformation === \"1\") {\n  //   setIsLoggedIn(true);\n  //  }\n  //}, []);\n\n  // const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //    localStorage.setItem(\"isLoggedIn\", \"1\");\n  //    setIsLoggedIn(true);\n  //  };\n\n  //const logoutHandler = () => {\n  // localStorage.removeItem(\"isLoggedIn\");\n  //setIsLoggedIn(false);\n  //};\n\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,MAAO,CAAAC,WAAW,KAAM,iCAAiC,CACzD,MAAO,CAAAC,KAAK,KAAM,0BAA0B,CAC5C,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CACzC,MAAO,CAAAC,UAAU,KAAM,oCAAoC,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE5D,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,GAAM,CAAAC,GAAG,CAAGV,UAAU,CAACC,WAAW,CAAC,CACnC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,mBACEO,KAAA,CAACT,QAAQ,EAAAY,QAAA,eACPL,IAAA,CAACF,UAAU,IAAG,cACdI,KAAA,SAAAG,QAAA,EACG,CAACD,GAAG,CAACE,UAAU,eAAIN,IAAA,CAACJ,KAAK,IAAG,CAC5BQ,GAAG,CAACE,UAAU,eAAIN,IAAA,CAACH,IAAI,IAAG,GACtB,GACE,CAEf,CAEA,cAAe,CAAAM,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}
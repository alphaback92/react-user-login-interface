{"ast":null,"code":"import _slicedToArray from\"/Users/alphaback/userlogin/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var AuthContext=/*#__PURE__*/React.createContext({isLoggedIn:false,onLogout:function onLogout(){},onLogin:function onLogin(email,password){}});export var AuthContextProvider=function AuthContextProvider(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoggedIn=_useState2[0],setIsLoggedIn=_useState2[1];useEffect(function(){var storedUserLogedInInformation=localStorage.getItem(\"isLoggedIn\");if(storedUserLogedInInformation===\"1\"){setIsLoggedIn(true);}},[]);var logoutHandler=function logoutHandler(){localStorage.removeItem(\"isLoggedIn\");setIsLoggedIn(false);};var loginHandler=function loginHandler(email,password){localStorage.setItem(\"isLoggedIn\",\"1\");setIsLoggedIn(true);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isLoggedIn:isLoggedIn,onLogout:logoutHandler,onLogin:loginHandler},children:props.children});};export default AuthContext;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","_useState","_useState2","_slicedToArray","setIsLoggedIn","storedUserLogedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","Provider","value","children"],"sources":["/Users/alphaback/userlogin/src/components/store/auth-context.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserLogedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogout: logoutHandler,\n        onLogin: loginHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"gHAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnD,GAAM,CAAAC,WAAW,cAAGL,KAAK,CAACM,aAAa,CAAC,CACtCC,UAAU,CAAE,KAAK,CACjBC,QAAQ,CAAE,SAAAA,SAAA,CAAM,CAAC,CAAC,CAClBC,OAAO,CAAE,SAAAA,QAACC,KAAK,CAAEC,QAAQ,CAAK,CAAC,CACjC,CAAC,CAAC,CAEF,MAAO,IAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAIC,KAAK,CAAK,CAC5C,IAAAC,SAAA,CAAoCb,QAAQ,CAAC,KAAK,CAAC,CAAAc,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA5CP,UAAU,CAAAQ,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhCb,SAAS,CAAC,UAAM,CACd,GAAM,CAAAgB,4BAA4B,CAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC,CACvE,GAAIF,4BAA4B,GAAK,GAAG,CAAE,CACxCD,aAAa,CAAC,IAAI,CAAC,CACrB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAI,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1BF,YAAY,CAACG,UAAU,CAAC,YAAY,CAAC,CACrCL,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CACD,GAAM,CAAAM,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAIb,KAAK,CAAEC,QAAQ,CAAK,CACxCQ,YAAY,CAACK,OAAO,CAAC,YAAY,CAAE,GAAG,CAAC,CACvCP,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,mBACEb,IAAA,CAACC,WAAW,CAACoB,QAAQ,EACnBC,KAAK,CAAE,CACLnB,UAAU,CAAEA,UAAU,CACtBC,QAAQ,CAAEa,aAAa,CACvBZ,OAAO,CAAEc,YACX,CAAE,CAAAI,QAAA,CAEDd,KAAK,CAACc,QAAQ,EACM,CAE3B,CAAC,CAED,cAAe,CAAAtB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}
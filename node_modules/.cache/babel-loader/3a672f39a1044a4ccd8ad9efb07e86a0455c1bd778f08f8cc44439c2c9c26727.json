{"ast":null,"code":"var _jsxFileName = \"/Users/alphaback/01-starting-project-userlogin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserLogedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  // const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //    localStorage.setItem(\"isLoggedIn\", \"1\");\n  //    setIsLoggedIn(true);\n  //  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AuthContext","Login","Home","MainHeader","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","storedUserLogedInInformation","localStorage","getItem","logoutHandler","removeItem","Provider","value","onLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","loginHandler","_c","$RefreshReg$"],"sources":["/Users/alphaback/01-starting-project-userlogin/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n    const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n    if (storedUserLogedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  // const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //    localStorage.setItem(\"isLoggedIn\", \"1\");\n  //    setIsLoggedIn(true);\n  //  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: isLoggedIn, onLogout: logoutHandler }}\n    >\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMW,4BAA4B,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACvE,IAAIF,4BAA4B,KAAK,GAAG,EAAE;MACxCD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1BF,YAAY,CAACG,UAAU,CAAC,YAAY,CAAC;IACrCL,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA,CAACL,WAAW,CAACe,QAAQ;IACnBC,KAAK,EAAE;MAAER,UAAU,EAAEA,UAAU;MAAES,QAAQ,EAAEJ;IAAc,CAAE;IAAAK,QAAA,gBAE3Db,OAAA,CAACF,UAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdjB,OAAA;MAAAa,QAAA,GACG,CAACV,UAAU,iBAAIH,OAAA,CAACJ,KAAK;QAACsB,OAAO,EAAEC;MAAa;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC/Cd,UAAU,iBAAIH,OAAA,CAACH,IAAI;QAACe,QAAQ,EAAEJ;MAAc;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACc;AAE3B;AAACf,EAAA,CAjCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
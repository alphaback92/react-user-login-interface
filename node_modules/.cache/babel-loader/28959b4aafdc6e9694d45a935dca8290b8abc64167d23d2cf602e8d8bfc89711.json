{"ast":null,"code":"var _jsxFileName = \"/Users/alphaback/01-starting-project-userlogin/src/App.js\";\nimport React, { Fragment, useContext } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //useEffect(() => {\n  // const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n  // if (storedUserLogedInInformation === \"1\") {\n  //   setIsLoggedIn(true);\n  //  }\n  //}, []);\n\n  // const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //    localStorage.setItem(\"isLoggedIn\", \"1\");\n  //    setIsLoggedIn(true);\n  //  };\n\n  //const logoutHandler = () => {\n  // localStorage.removeItem(\"isLoggedIn\");\n  //setIsLoggedIn(false);\n  //};\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useContext","AuthContext","Login","Home","MainHeader","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoggedIn","onLogin","loginHandler","onLogout","logoutHandler","_c","$RefreshReg$"],"sources":["/Users/alphaback/01-starting-project-userlogin/src/App.js"],"sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //useEffect(() => {\n  // const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n  // if (storedUserLogedInInformation === \"1\") {\n  //   setIsLoggedIn(true);\n  //  }\n  //}, []);\n\n  // const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //    localStorage.setItem(\"isLoggedIn\", \"1\");\n  //    setIsLoggedIn(true);\n  //  };\n\n  //const logoutHandler = () => {\n  // localStorage.removeItem(\"isLoggedIn\");\n  //setIsLoggedIn(false);\n  //};\n\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACED,OAAA,CAACP,QAAQ;IAAAS,QAAA,gBACPF,OAAA,CAACF,UAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdN,OAAA;MAAAE,QAAA,GACG,CAACK,UAAU,iBAAIP,OAAA,CAACJ,KAAK;QAACY,OAAO,EAAEC;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC/CC,UAAU,iBAAIP,OAAA,CAACH,IAAI;QAACa,QAAQ,EAAEC;MAAc;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEf;AAACM,EAAA,GA/BQX,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
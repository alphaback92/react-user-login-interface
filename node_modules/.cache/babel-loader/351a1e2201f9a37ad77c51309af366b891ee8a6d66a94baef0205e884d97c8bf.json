{"ast":null,"code":"var _jsxFileName = \"/Users/alphaback/userlogin/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useContext } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const ctx = useContext(AuthContext);\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //useEffect(() => {\n  // const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n  // if (storedUserLogedInInformation === \"1\") {\n  //   setIsLoggedIn(true);\n  //  }\n  //}, []);\n\n  // const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //    localStorage.setItem(\"isLoggedIn\", \"1\");\n  //    setIsLoggedIn(true);\n  //  };\n\n  //const logoutHandler = () => {\n  // localStorage.removeItem(\"isLoggedIn\");\n  //setIsLoggedIn(false);\n  //};\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }, this), ctx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Fragment","useContext","AuthContext","Login","Home","MainHeader","jsxDEV","_jsxDEV","App","_s","ctx","children","fileName","_jsxFileName","lineNumber","columnNumber","isLoggedIn","_c","$RefreshReg$"],"sources":["/Users/alphaback/userlogin/src/App.js"],"sourcesContent":["import React, { Fragment, useContext } from \"react\";\nimport AuthContext from \"./components/store/auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n  const ctx = useContext(AuthContext);\n  //const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  //useEffect(() => {\n  // const storedUserLogedInInformation = localStorage.getItem(\"isLoggedIn\");\n  // if (storedUserLogedInInformation === \"1\") {\n  //   setIsLoggedIn(true);\n  //  }\n  //}, []);\n\n  // const loginHandler = (email, password) => {\n  // We should of course check email and password\n  // But it's just a dummy/ demo anyways\n  //    localStorage.setItem(\"isLoggedIn\", \"1\");\n  //    setIsLoggedIn(true);\n  //  };\n\n  //const logoutHandler = () => {\n  // localStorage.removeItem(\"isLoggedIn\");\n  //setIsLoggedIn(false);\n  //};\n\n  return (\n    <Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,WAAW,MAAM,iCAAiC;AACzD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,GAAG,GAAGT,UAAU,CAACC,WAAW,CAAC;EACnC;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACEK,OAAA,CAACP,QAAQ;IAAAW,QAAA,gBACPJ,OAAA,CAACF,UAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACdR,OAAA;MAAAI,QAAA,GACG,CAACD,GAAG,CAACM,UAAU,iBAAIT,OAAA,CAACJ,KAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC5BL,GAAG,CAACM,UAAU,iBAAIT,OAAA,CAACH,IAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEf;AAACN,EAAA,CAhCQD,GAAG;AAAAS,EAAA,GAAHT,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}